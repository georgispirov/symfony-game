# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    app.shopping.cart.menu_builder:
        class: AppBundle\Menu\MenuBuilder
        arguments: ['@service_container']

    app.form.registration:
         class: AppBundle\Form\RegistrationType
         tags:
             - { name: form.type, alias: app_user_registration }

    app.redirect_after_registration:
         class: AppBundle\EventListener\RedirectAfterRegistrationUser
         autowire: true
         tags:
            - { name: kernel.event_subscriber }

    app.services.cart_service:
         class: AppBundle\Services\CartService
         autowire: true
         public: true
         arguments:
            - "@doctrine.orm.entity_manager"
            - "@session"
            - "@app.services.ordered_products"

    app.services.product:
         class: AppBundle\Services\ProductService
         autowire: true
         public: true

    app.services.categories:
         class: AppBundle\Services\CategoriesService
         autowire: true
         public: true

    app.services.ordered_products:
         class: AppBundle\Services\OrderedProductsService
         autowire: true
         public: true

    app.categories_controller_dependency:
         class: AppBundle\Controller\CategoriesController
         arguments:
              - "@app.services.categories"
              - "@app.services.product"

    app.product_controller_dependency:
         class: AppBundle\Controller\ProductController
         arguments:
              - "@app.services.product"

    app.cart_controller_dependency:
         class: AppBundle\Controller\CartController
         arguments:
              - "@app.services.cart_service"

    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'
