<?php

namespace AppBundle\Repository;

use AppBundle\Entity\OrderedProducts;
use AppBundle\Entity\Product;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\QueryBuilder;
use Exception;
use FOS\UserBundle\Model\UserInterface;

/**
 * OrderedProductsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class OrderedProductsRepository extends EntityRepository implements IOrderedProductsRepository
{
    public function invokeFindByBuilder(): QueryBuilder
    {
        return $this->createQueryBuilder($this->getClassMetadata()->getTableName());
    }

    /**
     * @param int $id
     * @return OrderedProducts[]
     */
    public function getOrderedProductsByUser(int $id): array
    {

    }

    /**
     * @param UserInterface $user
     * @param Product $product
     * @return bool
     * @throws \Exception
     */
    public function addOrderedProduct(UserInterface $user, Product $product): bool
    {
        $em = $this->getEntityManager();

        $orderedProduct = new OrderedProducts();
        $orderedProduct->setUser($user);
        $orderedProduct->setOrderedDate(new \DateTime('now'));
        $orderedProduct->setConfirmed(false);
        $orderedProduct->setProduct($product);
        $orderedProduct->setTotalCheck($product->getPrice());

        $em->persist($orderedProduct);
        if (true === $em->getUnitOfWork()->isEntityScheduled($orderedProduct)) {
            $em->flush();
            return true;
        }
        return false;
    }

    /**
     * @param int $id
     * @return mixed
     */
    public function findOrderedProductByID(int $id)
    {
        $em = $this->getEntityManager();
        return $em->getRepository(OrderedProducts::class)->findOneBy(['id' => $id]);
    }
}
