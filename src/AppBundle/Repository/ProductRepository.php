<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Categories;
use AppBundle\Entity\Product;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\QueryBuilder;

/**
 * ProductRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductRepository extends EntityRepository implements IProductRepository
{
    public function invokeFindByBuilder(): QueryBuilder
    {
        return $this->createQueryBuilder($this->getClassMetadata()->getTableName());
    }

    /**
     * @param string $name
     * @return array
     */
    public function getProductsByCategory(string $name): array
    {
        /* @var Categories $category */
        $category = $this->getEntityManager()
                         ->getRepository(Categories::class)
                         ->findByCategoryName($name);

        return $this->findBy(['category' => $category->getId()]);
    }

    /**
     * @param int $id
     * @return null|Product
     */
    public function findProductByID(int $id)
    {
        return $this->getEntityManager()
                    ->getRepository(Product::class)
                    ->findOneBy([
                        'id' => $id
                    ]);
    }

    /**
     * @return Product[]
     */
    public function getAllActiveProducts(): array
    {
        $query = $this->getEntityManager()
                      ->getRepository(Product::class)
                      ->createQueryBuilder('p')
                      ->select('p')
                      ->where('p.quantity > 0');

        return $query->getQuery()->getResult();
    }
}
